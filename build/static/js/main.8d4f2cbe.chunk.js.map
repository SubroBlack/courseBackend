{"version":3,"sources":["components/Display.js","components/Search.js","services/persons.js","App.js","index.js"],"names":["Button","props","id","deletePerson","onClick","Contact","name","number","Display","persons","map","person","key","Search","searchTerm","searchResult","changeSearch","search","type","value","onChange","onKeyUp","baseUrl","axios","get","then","res","data","newObject","post","delete","put","Notification","notification","className","Error","error","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setSearchTerm","setSearchResult","setNotification","setError","useEffect","personsService","event","target","result","filter","toLowerCase","length","onSubmit","preventDefault","repeatPerson","newContact","window","confirm","setTimeout","concat","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d4f2cbe.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// Button\r\nconst Button = props => {\r\n  const id = props.id;\r\n  const deletePerson = props.deletePerson;\r\n  return <button onClick={deletePerson(id)}>Delete</button>;\r\n};\r\n\r\n// Component to display the Person\r\nconst Contact = props => {\r\n  return (\r\n    <p>\r\n      {props.name} {props.number}\r\n    </p>\r\n  );\r\n};\r\n\r\n// Display for the array of Contacts\r\nconst Display = props =>\r\n  props.persons.map(person => (\r\n    <div key={person.id}>\r\n      <Contact name={person.name} number={person.number} />\r\n      <Button deletePerson={props.deletePerson} id={person.id} />\r\n    </div>\r\n  ));\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\nimport Display from \"./Display\";\r\n\r\n// Search Functionality and DIspaly Result\r\nconst Search = props => {\r\n  const searchTerm = props.searchTerm;\r\n  const searchResult = props.searchResult;\r\n\r\n  const changeSearch = props.changeSearch;\r\n  const search = props.search;\r\n\r\n  return (\r\n    <div>\r\n      filter shown with:{\" \"}\r\n      <input\r\n        type=\"text\"\r\n        value={searchTerm}\r\n        onChange={changeSearch}\r\n        onKeyUp={search}\r\n      />\r\n      <Display persons={searchResult} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then(res => res.data);\r\n};\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject).then(res => res.data);\r\n};\r\n\r\nconst deletePerson = id => {\r\n  return axios.delete(`${baseUrl}/${id}`).then(res => res.data);\r\n};\r\n\r\nconst editPerson = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject).then(res => res.data);\r\n};\r\n\r\nexport default { getAll, create, deletePerson, editPerson };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Display from \"./components/Display\";\r\nimport Search from \"./components/Search\";\r\nimport personsService from \"./services/persons\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null;\r\n  } else {\r\n    return <div className=\"notification\">{notification}</div>;\r\n  }\r\n};\r\n\r\nconst Error = ({ error }) => {\r\n  if (error === null) {\r\n    return null;\r\n  } else {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n};\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [notification, setNotification] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  //Fetch data from server\r\n  useEffect(() => {\r\n    personsService.getAll().then(res => {\r\n      setPersons(res);\r\n    });\r\n  }, []);\r\n\r\n  // Save new contact in phonebook\r\n  const saveContact = event => {\r\n    event.preventDefault();\r\n\r\n    // Prevent repreating saves\r\n    const repeatPerson = persons.filter(person => person.name === newName);\r\n    const newContact = {\r\n      name: newName,\r\n      number: newNumber\r\n    };\r\n    if (repeatPerson.length > 0) {\r\n      if (\r\n        window.confirm(\r\n          `${newName} is already added to phonebook, replace the old number with a new one?`\r\n        )\r\n      ) {\r\n        personsService\r\n          .editPerson(repeatPerson[0].id, newContact)\r\n          .then(res => {\r\n            setNotification(\r\n              `Changed the number of ${res.name} in the phonebook.`\r\n            );\r\n            setTimeout(() => {\r\n              setNotification(null);\r\n            }, 5000);\r\n            setPersons(\r\n              persons.filter(person => person.name !== newName).concat(res)\r\n            );\r\n          })\r\n          .catch(error => {\r\n            setError(`Could not edit the contact: ${error}`);\r\n          });\r\n      }\r\n    } else {\r\n      // Sending Data to server\r\n      personsService\r\n        .create(newContact)\r\n        .then(res => {\r\n          setNotification(`Added ${res.name} in the phonebook.`);\r\n          setTimeout(() => {\r\n            setNotification(null);\r\n          }, 5000);\r\n          setPersons(persons.concat(res));\r\n        })\r\n        .catch(error => {\r\n          setError(`Could not save the contact: ${error}`);\r\n        });\r\n    }\r\n    setNewName(\"\");\r\n    setNewNumber(\"\");\r\n  };\r\n\r\n  // Delete an Entry from Phonebook\r\n  const deletePerson = id => () => {\r\n    if (window.confirm(\"Delete the contact?\")) {\r\n      personsService.deletePerson(id).catch(error => {\r\n        setError(`Could not delete the contact: ${error}`);\r\n        setTimeout(() => {\r\n          setError(null);\r\n        }, 5000);\r\n      });\r\n      setPersons(persons.filter(person => person.id !== id));\r\n    }\r\n  };\r\n\r\n  // Change name in input field\r\n  const changeName = event => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  // Change number in input field\r\n  const changeNumber = event => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  // Search Term\r\n  const changeSearch = event => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  // Search for the term and return the result\r\n  const search = event => {\r\n    const result = persons.filter(\r\n      person => searchTerm.toLowerCase() === person.name.toLowerCase()\r\n    );\r\n    if (result.length > 0) {\r\n      setSearchResult(result);\r\n    } else {\r\n      // Return empty array if result dont match\r\n      setSearchResult([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notification} />\r\n      <Error error={error} />\r\n      <Search\r\n        searchTerm={searchTerm}\r\n        searchResult={searchResult}\r\n        changeSearch={changeSearch}\r\n        search={search}\r\n      />\r\n      <h2>add a new</h2>\r\n      <form onSubmit={saveContact}>\r\n        <div>\r\n          name: <input value={newName} onChange={changeName} />\r\n          <br />\r\n          number: <input value={newNumber} onChange={changeNumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n      <h2>Numbers</h2>\r\n      <Display persons={persons} deletePerson={deletePerson} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}